{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","onPageChange","currentPage","pagesNum","Math","ceil","pages","handlePageChange","newPage","className","classNames","disabled","href","onClick","map","active","defaultProps","items","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","itemsNum","length","startItemNumber","possibleEndItem","endItemNumber","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,aAEI,IADJC,mBACI,MADU,EACV,EACEC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAQd,EAAW,EAAGW,GAEtBI,EAAmB,SAACC,GAEtBN,IAAgBM,GACbA,EAAU,GACVA,EAAUL,GAKfF,EAAaO,IAGf,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAA0B,IAAhBT,IAHd,SAOE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAAS,kBAAMN,EAAiBL,EAAc,IALhD,oBAWDI,EAAMQ,KAAI,SAAAlB,GAAC,OACV,oBAEEa,UAAWC,IACT,YACA,CACEK,OAAQb,IAAgBN,IAL9B,SASE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAI,WAAMhB,GACViB,QAAS,kBAAMN,EAAiBX,IAJlC,SAMGA,KAdEA,MAmBT,oBAAIa,UAAWC,IACb,YACA,CACEC,SAAUT,IAAgBC,IAH9B,SAOE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBC,EAC/BU,QAAS,kBAAMN,EAAiBL,EAAc,IALhD,wBAcRJ,EAAWkB,aAAe,CACxBd,YAAa,G,UCzFTe,EAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPsB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAWN,EAAMO,OAEjBC,EAAkBJ,GAAgBnB,EAAc,GAAK,EACrDwB,EAAkBL,EAAenB,EACjCyB,EAAgBD,GAAmBH,EACrCG,EACAH,EAEEK,EAAeX,EAAMY,MACzBJ,EAAkB,EAClBE,GAQF,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiCuB,EADjC,cACsDE,EADtD,aAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAOV,EACPW,SApBe,SAACC,GACxBX,GAAiBW,EAAMC,OAAOH,OAC9BX,EAAe,IAaT,UAOE,wBAAQW,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOwB,EACPvB,QAASqB,EACTnB,YAAaA,EACbD,aAAcmB,IAGhB,6BACGQ,EAAad,KAAI,SAAAsB,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCpEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b3e729d0.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  onPageChange: (page: number) => void;\n  currentPage?: number;\n};\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  onPageChange,\n  currentPage = 1,\n}) => {\n  const pagesNum = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesNum);\n\n  const handlePageChange = (newPage: number): void => {\n    if (\n      currentPage === newPage\n      || newPage < 1\n      || newPage > pagesNum\n    ) {\n      return;\n    }\n\n    onPageChange(newPage);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: currentPage === 1,\n        },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(n => (\n        <li\n          key={n}\n          className={classNames(\n            'page-item',\n            {\n              active: currentPage === n,\n            },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${n}`}\n            onClick={() => handlePageChange(n)}\n          >\n            {n}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: currentPage === pagesNum,\n        },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesNum}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nPagination.defaultProps = {\n  currentPage: 1,\n};\n","import React, { ChangeEvent, useState } from 'react';\n\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nimport './App.css';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const itemsNum = items.length;\n\n  const startItemNumber = itemsPerPage * (currentPage - 1) + 1;\n  const possibleEndItem = itemsPerPage * currentPage;\n  const endItemNumber = possibleEndItem <= itemsNum\n    ? possibleEndItem\n    : itemsNum;\n\n  const visibleItems = items.slice(\n    startItemNumber - 1,\n    endItemNumber,\n  );\n\n  const onItemsNumChange = (event: ChangeEvent<HTMLSelectElement>): void => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItemNumber} - ${endItemNumber} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={onItemsNumChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={itemsNum}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}